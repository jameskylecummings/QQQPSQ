<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_561190_micro_p_0_transactions</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>TransactionsBalanceAtDelete</name>
        <order>1</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var grOpeningBalance = new GlideRecord('x_561190_micro_p_0_fy_opening_balance');	
    var canWrite = grOpeningBalance.canWrite(); // used to check if curent user has write rights
    grOpeningBalance.addQuery('fiscal_year_lookup', current.fiscal_yr_lookup);
    grOpeningBalance.addQuery('account_lookup', current.account_number_lookup);
    grOpeningBalance.addQuery('division_lookup', current.organization_ref);	
    grOpeningBalance.query(); // query with select conditions specified by the three addQuery
	
	if (canWrite)
	{
		while (grOpeningBalance.next()) { // use loop to update record(s) erturned by query
			var previous_final_cost_non_legacy = parseFloat(previous.final_cost_non_legacy);
			var previous_remaining_balance = parseFloat(grOpeningBalance.getValue('remaining_balance'));
			var final_remaining_balance = Math.round((previous_remaining_balance + previous_final_cost_non_legacy) * 100)/100;	//this will round specified dollar amounts to two-place decimal
			grOpeningBalance.setValue('remaining_balance', final_remaining_balance); // set remaining balance
			grOpeningBalance.update();	// performs update		
			
		}
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-07-12 15:52:14</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f3c164f5db113010c414ce4e139619ed</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>TransactionsBalanceAtDelete</sys_name>
        <sys_overrides/>
        <sys_package display_value="Micro Purchase Transactions (MPT)" source="x_561190_micro_p_0">b63654002f3b201063e23f96f699b69e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Micro Purchase Transactions (MPT)">b63654002f3b201063e23f96f699b69e</sys_scope>
        <sys_update_name>sys_script_f3c164f5db113010c414ce4e139619ed</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-07-15 21:27:18</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f3c164f5db113010c414ce4e139619ed"/>
</record_update>
